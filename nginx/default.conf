upstream client {
    server client:3000;
}

upstream library-api {
    server library-api:5001;
}

server {
    listen 80 default_server;

    server_name aips.mobi;

    client_max_body_size 200M;

    return 301 https://aips.mobi$request_uri;
}

server {

    listen 443 ssl default_server;

    server_name aips.mobi;

    client_max_body_size 200M;

    access_log /var/log/nginx/nginx.vhost.access.log;
    error_log /var/log/nginx/nginx.vhost.error.log;

    ssl_certificate /etc/nginx/certs/certificate.crt;
    ssl_certificate_key /etc/nginx/certs/privateKey.key;
    
    location / {
        proxy_pass http://client;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header SSL_PROTOCOL $ssl_protocol;
        client_max_body_size 200M;

        # enables WS support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 999999999;
    }

    location /socket.io/ {
		proxy_pass http://library-api;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /.well-known/pki-validation/91CA4795A25F956C62A2671EF7319D3C.txt  {
        proxy_pass http://library-api;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /uploads/  {
        proxy_pass http://library-api;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 200M;
    }

    location /api {
        proxy_pass http://library-api;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 200M;
    }

}